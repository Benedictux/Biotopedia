<?php
// src/Biotopedia/PisciothequeBundle/Entity/FamilleRepository.php
namespace Biotopedia\PisciothequeBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\QueryBuilder;

/**
 * FamilleRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class FamilleRepository extends EntityRepository
{
	//Récupère la totalité des familles en B.D. et les classe par ordre alphabetique
	public function findAllOrderedByName()
	{
		//Récupère le QueryBuilder puis la Query corespondant à la selection et Result
		$qb = $this
		->createQueryBuilder('f')
		// Jointure sur l'attribut poissons
		->leftJoin('f.poissons', 'p')
		->addSelect('p')
		->orderBy('f.scientific_name', 'ASC');

		//recupére la Query du QueryBuilder "$qb" puis le résultat de la Query sous forme d'array (tableau)
    	return $qb->getQuery()->getResult();
	}

	//Recupère les data d'une famille selon son id
	public function findOneById($id)
	{
		$qb = $this
		->createQueryBuilder('f')
		->where('f.id = :id')
		->setParameter('id', $id);

		try {
			//getSingleResult retourne un seul resultat sous forme d'entité et non d'un array (tableau)
			return $qb->getQuery()->getSingleResult();
		}
    	catch (\Doctrine\ORM\NoResultException $e){
        	return null;
        }
	}

	//Recupère les data d'une famille selon son id avec ses jointures
	public function findWithJoins($id)
	{
		$qb = $this
		->createQueryBuilder('f')
		->leftJoin('f.poissons', 'p')
		->addSelect('p')
		->leftJoin('f.image', 'i')
		->addSelect('i')
		->where('f.id = :id')
		->setParameter('id', $id);

		try {
			//getSingleResult retourne un seul resultat sous forme d'entité et non d'un array (tableau)
			return $qb->getQuery()->getSingleResult();
		}
    	catch (\Doctrine\ORM\NoResultException $e){
        	return null;
        }
	}

	//Recupère les data d'une famille selon son scientific_name
	public function findOneByName($scientific_name)
	{
		$qb = $this
		->createQueryBuilder('f')
		->where('f.scientific_name = :scientific_name')
		->setParameter('scientific_name', $scientific_name);

		try {
			//getSingleResult retourne un seul resultat sous forme d'entité et non d'un array (tableau)
			return $qb->getQuery()->getSingleResult();
		}
    	catch (\Doctrine\ORM\NoResultException $e){
        	return null;
        }
	}
}